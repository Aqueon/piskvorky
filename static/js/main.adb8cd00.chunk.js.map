{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","_this","Object","C_Users_zient_Documents_React_Project1_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_zient_Documents_React_Project1_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_zient_Documents_React_Project1_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","_this2","handleClick","status","winner","tie","length","checkTie","renderSquare","React","Component","Game","lines","_lines$i","C_Users_zient_Documents_React_Project1_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"oLAIA,SAASA,EAAOC,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAASL,EAAMK,SACrCL,EAAMM,WAKbC,cACF,SAAAA,EAAYP,GAAO,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJEX,2EAQPY,GACR,IAAMJ,EAAUL,KAAKI,MAAMC,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKT,KAAKI,MAAMI,QAAU,IAAM,IACxCR,KAAKY,SAAS,CACVP,QAASA,EACTG,SAAUR,KAAKI,MAAMI,gDAIhBC,GAAG,IAAAI,EAAAb,KAChB,OAAOV,EAAAC,EAAAC,cAACJ,EAAD,CACKO,MAAOK,KAAKI,MAAMC,QAAQI,GAC1Bf,QAAS,kBAAMmB,EAAKC,YAAYL,uCAKxC,IACIM,EADEC,EAASL,EAAgBX,KAAKI,MAAMC,SAU1C,OAPIU,EADAC,EACS,WAAaA,EAqDlC,SAAkBX,GAEd,IADA,IAAIY,GAAM,EACDR,EAAI,EAAGA,EAAIJ,EAAQa,OAAQT,IAChC,IAAKJ,EAAQI,GAAI,CACbQ,GAAM,EACN,MAGR,OAAOA,EA5DQE,CAASnB,KAAKI,MAAMC,SAClB,aAEA,iBAAmBL,KAAKI,MAAMI,QAAU,IAAM,KAIvDlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUsB,GACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,IAEvB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,IAEvB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVO,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,GAClBpB,KAAKoB,aAAa,YAvDnBC,IAAMC,WA8DpBC,mLAEE,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACI,EAAD,OAEJN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,oBATD6B,IAAMC,WAkCzB,SAASX,EAAgBN,GAYrB,IAXA,IAAMmB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFf,EAAI,EAAGA,EAAIe,EAAMN,OAAQT,IAAK,KAAAgB,EAAA3B,OAAA4B,EAAA,EAAA5B,CACjB0B,EAAMf,GADW,GAC5BlB,EAD4BkC,EAAA,GACzBE,EADyBF,EAAA,GACtBG,EADsBH,EAAA,GAEnC,GAAIpB,EAAQd,IAAMc,EAAQd,KAAOc,EAAQsB,IAAMtB,EAAQsB,KAAOtB,EAAQuB,GAClE,OAAOvB,EAAQd,GAGvB,OAAO,KAlCXsC,IAASC,OACLxC,EAAAC,EAAAC,cAAC+B,EAAD,MACAQ,SAASC,eAAe","file":"static/js/main.adb8cd00.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    renderSquare(i) {\r\n    return <Square\r\n                value={this.state.squares[i]}\r\n                onClick={() => this.handleClick(i)}\r\n            />;\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else if (checkTie(this.state.squares)) {\r\n            status = 'It\\'s a tie';\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\n  // ========================================\r\n  \r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction checkTie(squares) {\r\n    let tie = true;\r\n    for (let i = 0; i < squares.length; i++) {\r\n        if (!squares[i]) {\r\n            tie = false;\r\n            break;\r\n        }\r\n    }\r\n    return tie;\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n  "],"sourceRoot":""}